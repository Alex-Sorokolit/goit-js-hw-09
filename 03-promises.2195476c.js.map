{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEoBC,SAASC,cAAc,SAE/BC,iBAAiB,UAO7B,SAAsBC,GACpBA,EAAMC,iBAEN,MACEC,UACAC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACXN,EAAMO,cAEVC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAG5B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCC,EAAcD,EAAGL,GACdO,MAAK,EAACC,SAAEA,EAAQb,MAAEA,MACnBc,QAAQC,IAAI,uBAAqBF,QAAiBb,OAChDR,EAAAwB,OAAOC,QAAQ,uBAAqBJ,QAAiBb,MAAW,CAC5DkB,QAAO,IACTC,kBAAmB,QACrB,IAEDC,OAAM,EAACP,SAAEA,EAAQb,MAAEA,MACpBc,QAAQC,IAAI,sBAAoBF,QAAiBb,OAC/CR,EAAAwB,OAAOK,QAAQ,sBAAoBR,QAAiBb,MAAW,CAC3DkB,QAAO,IACTC,kBAAmB,QACrB,IAGJd,GAAcG,EAElBX,EAAMO,cAAckB,O,IArCpB,IAAIjB,EAAa,KACbG,EAAY,KACZC,EAAc,KA0ClB,SAASE,EAAcE,EAAUb,GAC/B,OAAO,IAAIuB,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACaC,KAAKC,SAAW,GAIpCJ,EAAQ,C,SAAEX,E,MAAUb,IAEpByB,EAAO,C,SAAEZ,E,MAAUb,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst promiseForm = document.querySelector('.form');\n\npromiseForm.addEventListener('submit', onFormSubmit);\n\nlet delayInput = null;\nlet delayStep = null;\nlet amountInput = null;\n\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: {\n    delay, step, amount },\n  } = event.currentTarget;\n\n  delayInput = Number(delay.value);\n  delayStep = Number(step.value);\n  amountInput = Number(amount.value);\n\n  \n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 1000,\n          cssAnimationStyle: 'fade',\n      });\n    })\n      .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 1000,\n          cssAnimationStyle: 'fade',\n      });\n      });\n    \n    delayInput += delayStep;\n  }\nevent.currentTarget.reset();\n\n  }\n\n\n\n// Створюємо проміс для одного значення\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      // console.log(shouldResolve);\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","event","preventDefault","elements","delay","delay1","step","amount","currentTarget","$47d4ff9957288465$var$delayInput","Number","value","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountInput","i","$47d4ff9957288465$var$createPromise","then","position","console","log","Notify","success","timeout","cssAnimationStyle","catch","failure","reset","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.2195476c.js.map"}