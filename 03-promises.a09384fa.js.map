{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAgDA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACaC,KAAKC,SAAW,GAIpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1DaO,SAASC,cAAc,SAE/BC,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAYN,IAVA,IAGuBC,EAAnBF,EAAMG,cAFRC,SACAC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGZC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAGtBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCzB,EAAcyB,EAAGL,GACdM,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACnB0B,QAAQC,IAAI,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACxDJ,EAAAiC,OAAOC,QAAQ,uBAAwCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,MAAK,CAC9D+B,QAAO,IACTC,kBAAmB,OACnBC,WAAW,W,IAGdC,OAAM,SAAAT,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,QAAQC,IAAI,sBAAuCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACzDJ,EAAAiC,OAAOM,QAAQ,sBAAuCP,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,MAAK,CAC7D+B,QAAO,IACTC,kBAAmB,OACnBC,WAAW,W,IAKjBf,GAAcG,EAElBX,EAAMG,cAAcuB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst promiseForm = document.querySelector('.form');\n\npromiseForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: {\n    delay, step, amount },\n  } = event.currentTarget;\n\n let delayInput = Number(delay.value);\n let delayStep = Number(step.value);\n let amountInput = Number(amount.value);\n\n  \n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 1000,\n          cssAnimationStyle: 'fade',\n          background:'#5da85d'\n        });\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 1000,\n          cssAnimationStyle: 'fade',\n          background:'#a85d5d'\n\n      });\n      });\n    \n    delayInput += delayStep;\n  }\nevent.currentTarget.reset();\n\n  }\n\n\n\n// Створюємо проміс для одного значення\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      // console.log(shouldResolve);\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayInput","Number","value","delayStep","amountInput","i","then","param","console","log","concat","Notify","success","timeout","cssAnimationStyle","background","catch","failure","reset"],"version":3,"file":"03-promises.a09384fa.js.map"}