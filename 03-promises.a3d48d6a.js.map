{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgDA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACaC,KAAKC,SAAW,GAIpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1DOO,SAASC,cAAc,SAE/BC,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAEN,MACEC,UACAZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACXL,EAAMM,cAEX,IAAIC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAG/B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCxB,EAAcwB,EAAGL,GACdM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACnBwB,QAAQC,IAAI,uBAAqB1B,QAAiBC,OAChDJ,EAAA8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAW,CAC5D4B,QAAO,IACTC,kBAAmB,OACnBC,WAAW,WACX,IAEHC,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClBwB,QAAQC,IAAI,sBAAoB1B,QAAiBC,OACjDJ,EAAA8B,OAAOM,QAAQ,sBAAoBjC,QAAiBC,MAAW,CAC3D4B,QAAO,IACTC,kBAAmB,OACnBC,WAAW,WAEb,IAGJb,GAAcG,EAElBV,EAAMM,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst promiseForm = document.querySelector('.form');\n\npromiseForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: {\n    delay, step, amount },\n  } = event.currentTarget;\n\n let delayInput = Number(delay.value);\n let delayStep = Number(step.value);\n let amountInput = Number(amount.value);\n\n  \n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 1000,\n          cssAnimationStyle: 'fade',\n          background:'#5da85d'\n        });\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 1000,\n          cssAnimationStyle: 'fade',\n          background:'#a85d5d'\n\n      });\n      });\n    \n    delayInput += delayStep;\n  }\nevent.currentTarget.reset();\n\n  }\n\n\n\n// Створюємо проміс для одного значення\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      // console.log(shouldResolve);\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayInput","Number","value","delayStep","amountInput","i","then","console","log","Notify","success","timeout","cssAnimationStyle","background","catch","failure","reset"],"version":3,"file":"03-promises.a3d48d6a.js.map"}